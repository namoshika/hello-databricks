AWSTemplateFormatVersion: "2010-09-09"
Description: "Reference: https://docs.aws.amazon.com/msk/latest/developerguide/getting-started.html"

Parameters:
  ClusterName:
    Type: String
    Default: dbx-kafka-cluster
  KafkaVersion:
    Type: String
    Default: 3.6.0
  BastionKeyPair:
    Type: String
  BastionSubnet:
    Type: AWS::EC2::Subnet::Id
  Broker1Subnet:
    Type: AWS::EC2::Subnet::Id
  Broker2Subnet:
    Type: AWS::EC2::Subnet::Id
  BrokerInstanceType:
    Type: String
    Default: kafka.t3.small
  SecurityGroupInternal:
    Type: AWS::EC2::SecurityGroup::Id
  SecurityGroupPublic:
    Type: AWS::EC2::SecurityGroup::Id

Mappings:
  Variable:
    ImageId: { Default: ami-06c6f3fa7959e5fdd } # Amazon Linux 2023 AMI

Resources:
  IamRoleBastionToKafka:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dbx-iamrole-ec2-kafkaBastion
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: ec2.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: dbx-iampolicy-ec2-kafkabastion
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kafka-cluster:Connect
                  - kafka-cluster:AlterCluster
                  - kafka-cluster:DescribeCluster
                Resource:
                  - !Sub arn:${AWS::Partition}:kafka:${AWS::Region}:${AWS::AccountId}:cluster/${ClusterName}/*
              - Effect: Allow
                Action:
                  - kafka-cluster:*Topic*
                  - kafka-cluster:WriteData
                  - kafka-cluster:ReadData
                Resource:
                  - !Sub arn:${AWS::Partition}:kafka:${AWS::Region}:${AWS::AccountId}:topic/${ClusterName}/*
              - Effect: Allow
                Action:
                  - kafka-cluster:AlterGroup
                  - kafka-cluster:DescribeGroup
                Resource:
                  - !Sub arn:${AWS::Partition}:kafka:${AWS::Region}:${AWS::AccountId}:group/${ClusterName}/*

  IamInstanceProfileBastionToKafka:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: dbx-iamrole-ec2-kafkaBastion
      Roles: [!Ref IamRoleBastionToKafka]

  # ----------------------------------------
  # Kafka Cluster
  # ----------------------------------------
  KafkaCluster:
    Type: AWS::MSK::Cluster
    Properties:
      BrokerNodeGroupInfo:
        ClientSubnets:
          - !Ref Broker1Subnet
          - !Ref Broker2Subnet
        ConnectivityInfo:
          PublicAccess: { Type: DISABLED }
        InstanceType: !Ref BrokerInstanceType
        SecurityGroups:
          - !Ref SecurityGroupInternal
        StorageInfo:
          EBSStorageInfo: { VolumeSize: 30 }
      ClientAuthentication:
        Unauthenticated: { Enabled: false }
        Tls: { Enabled: false }
        Sasl:
          Scram: { Enabled: true }
          Iam: { Enabled: true }
      ClusterName: !Ref ClusterName
      KafkaVersion: !Ref KafkaVersion
      NumberOfBrokerNodes: 2

  # ----------------------------------------
  # EC2 Bastion
  # ----------------------------------------
  EC2InstanceBastion:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.nano
      ImageId: !FindInMap [Variable, ImageId, Default]
      KeyName: !Ref BastionKeyPair
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            VolumeType: gp3
            VolumeSize: 30
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: true
          SubnetId: !Ref BastionSubnet
          GroupSet:
            - !Ref SecurityGroupInternal
            - !Ref SecurityGroupPublic
      Monitoring: false
      IamInstanceProfile: !Ref IamInstanceProfileBastionToKafka
      UserData: !Base64 |
        #!/bin/bash -ex
        yum -y install java-11

        wget -P '/home/ec2-user' https://archive.apache.org/dist/kafka/3.6.0/kafka_2.13-3.6.0.tgz
        tar -xzf '/home/ec2-user/kafka_2.13-3.6.0.tgz' -C '/home/ec2-user/'
        wget -P '/home/ec2-user/kafka_2.13-3.6.0/libs/' https://github.com/aws/aws-msk-iam-auth/releases/download/v1.1.1/aws-msk-iam-auth-1.1.1-all.jar
        echo -n '
          security.protocol=SASL_SSL
          sasl.mechanism=AWS_MSK_IAM
          sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
          sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler
        '> '/home/ec2-user/kafka_2.13-3.6.0/bin/client.properties'

        chown ec2-user:ec2-user -R /home/ec2-user/kafka_2.13-3.6.0/
      Tags:
        - { Key: Name, Value: dbx-ec2-bastion-external }
