AWSTemplateFormatVersion: '2010-09-09'
Description: "Reference: https://docs.databricks.com/ja/data-governance/unity-catalog/create-metastore.html"

Parameters:
  DatabricksAccountId:
    Type: String
    Description: Enter the Databricks Account ID that you copied from the Databricks Account Console.

  S3BucketName:
    Type: String
    Description: Enter the name of the S3 bucket you wanted manage by Databricks

  IamRoleName:
    Type: String
    Default: dbx-iamrole-storage-workspace

  IsFirstStep:
    Type: String
    Default: "True"
    AllowedValues: ["True", "False"]
    Description: IAM Role ARN for self-assume.

Conditions:
    IsFirstStep: !Equals ["True", !Ref IsFirstStep]

Resources:
  # ワークスペース用 S3 バケットを作成
  S3BucketManagedDatabricks:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties: 
      BucketName: !Ref S3BucketName

  # ワークスペース用 S3 バケットに対する Databricks からのアクセスを許可 (BucketPolicy)
  S3PolicyManagedDatabricks:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketManagedDatabricks
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Sid: Grant Databricks Access
            Effect: Allow
            Principal: { AWS: arn:aws:iam::414351767826:root }
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
              - s3:GetBucketLocation
            Resource:
             - !Sub arn:${AWS::Partition}:s3:::${S3BucketManagedDatabricks}/*
             - !Sub arn:${AWS::Partition}:s3:::${S3BucketManagedDatabricks}
            Condition:
              StringEquals: { aws:PrincipalTag/DatabricksAccountId: !Ref DatabricksAccountId }
          # 現在のワークスペース作成手順に則ると UnityCatalog と同居する為のポリシーが生成される。
          # Reference: https://docs.databricks.com/ja/admin/workspace/create-uc-workspace.html
          - Sid: Prevent DBFS from accessing Unity Catalog metastore
            Effect: Deny
            Principal: { AWS: arn:aws:iam::414351767826:root }
            Action: s3:*
            Resource: !Sub arn:${AWS::Partition}:s3:::${S3BucketManagedDatabricks}/unity-catalog/*
  
  # ワークスペース用 S3 バケットに対する Databricks からのアクセスを許可 (IAM Role)
  IamRoleDatabricksToS3Bucket:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref IamRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - arn:aws:iam::414351767826:role/unity-catalog-prod-UCMasterRole-14S5ZJVKOTYTL
                # このスタックはデプロイ後に再度スタック更新を行う。生成するIAM ロールの ARN を
                # 初回デプロイの段階で確定させ、スタック更新の段階で確定した ARN で自己仮定させる
                - !If [IsFirstStep, !Ref AWS::NoValue, !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${IamRoleName}"]
            Action: sts:AssumeRole
            Condition:
              StringEquals: { sts:ExternalId: !Ref DatabricksAccountId }

  IamPolicyDatabricksToS3Bucket:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: InlinePolicy
      Roles: [!Ref IamRoleDatabricksToS3Bucket]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetLifecycleConfiguration
              - s3:PutLifecycleConfiguration
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3BucketName}/*
              - !Sub arn:${AWS::Partition}:s3:::${S3BucketName}
          - Effect: Allow
            Action: sts:AssumeRole
            Resource: !GetAtt IamRoleDatabricksToS3Bucket.Arn

Outputs:
  S3BucketName:
    Value: !Ref S3BucketManagedDatabricks
    Description: S3 BucketName for Storage Configuration entry on Databricks Account Console.

  IamRoleArn:
    Value: !GetAtt IamRoleDatabricksToS3Bucket.Arn
    Description: IAM Role for Storage Configuration entry on Databricks Account Console.