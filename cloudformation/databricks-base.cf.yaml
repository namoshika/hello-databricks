AWSTemplateFormatVersion: '2010-09-09'
Description: "Reference: https://docs.databricks.com/ja/administration-guide/account-settings-e2/credentials.html"

Parameters:
  DatabricksAccountId:
    Type: String
    Description: Enter the Databricks Account ID that you copied from the Databricks Account Console.

Resources:
  IamRoleDatabricksToAwsBasic:
    # Databricks 側から AWS を操作する事を許可
    Type: AWS::IAM::Role
    Properties:
      RoleName: dbx-iamrole-base-basic
      AssumeRolePolicyDocument: 
        # 当ロールを Databricks 社が持つ Control Plane が使用する事を許可する
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { AWS: arn:aws:iam::414351767826:root }
            Action: sts:AssumeRole
            Condition:
                StringEquals: { sts:ExternalId: !Ref DatabricksAccountId }
      Policies:
        # 当 AWS アカウントへ Databricks の Control Plane が行える操作を定義
        - PolicyName: dbx-iampolicy-base
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - ec2:AllocateAddress
                  - ec2:AssignPrivateIpAddresses
                  - ec2:AssociateDhcpOptions
                  - ec2:AssociateIamInstanceProfile
                  - ec2:AssociateRouteTable
                  - ec2:AttachInternetGateway
                  - ec2:AttachVolume
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:CancelSpotInstanceRequests
                  - ec2:CreateDhcpOptions
                  - ec2:CreateFleet
                  - ec2:CreateInternetGateway
                  - ec2:CreateLaunchTemplate
                  - ec2:CreateLaunchTemplateVersion
                  - ec2:CreateNatGateway
                  - ec2:CreateRoute
                  - ec2:CreateRouteTable
                  - ec2:CreateSecurityGroup
                  - ec2:CreateSubnet
                  - ec2:CreateTags
                  - ec2:CreateVolume
                  - ec2:CreateVpc
                  - ec2:CreateVpcEndpoint
                  - ec2:DeleteDhcpOptions
                  - ec2:DeleteFleets
                  - ec2:DeleteInternetGateway
                  - ec2:DeleteLaunchTemplate
                  - ec2:DeleteLaunchTemplateVersions
                  - ec2:DeleteNatGateway
                  - ec2:DeleteRoute
                  - ec2:DeleteRouteTable
                  - ec2:DeleteSecurityGroup
                  - ec2:DeleteSubnet
                  - ec2:DeleteTags
                  - ec2:DeleteVolume
                  - ec2:DeleteVpc
                  - ec2:DeleteVpcEndpoints
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeFleetHistory
                  - ec2:DescribeFleetInstances
                  - ec2:DescribeFleets
                  - ec2:DescribeIamInstanceProfileAssociations
                  - ec2:DescribeInstanceStatus
                  - ec2:DescribeInstances
                  - ec2:DescribeInternetGateways
                  - ec2:DescribeLaunchTemplates
                  - ec2:DescribeLaunchTemplateVersions
                  - ec2:DescribeNatGateways
                  - ec2:DescribePrefixLists
                  - ec2:DescribeReservedInstancesOfferings
                  - ec2:DescribeRouteTables
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSpotInstanceRequests
                  - ec2:DescribeSpotPriceHistory
                  - ec2:DescribeSubnets
                  - ec2:DescribeVolumes
                  - ec2:DescribeVpcs
                  - ec2:DetachInternetGateway
                  - ec2:DisassociateIamInstanceProfile
                  - ec2:DisassociateRouteTable
                  - ec2:GetLaunchTemplateData
                  - ec2:GetSpotPlacementScores
                  - ec2:ModifyFleet
                  - ec2:ModifyLaunchTemplate
                  - ec2:ModifyVpcAttribute
                  - ec2:ReleaseAddress
                  - ec2:ReplaceIamInstanceProfileAssociation
                  - ec2:RequestSpotInstances
                  - ec2:RevokeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RunInstances
                  - ec2:TerminateInstances
              - Effect: Allow
                Resource: arn:aws:iam::*:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot
                Action:
                  - iam:CreateServiceLinkedRole
                  - iam:PutRolePolicy
                Condition:
                  StringLike:
                    iam:AWSServiceName: spot.amazonaws.com

  IamRoleDatabricksToAwsCmvpc:
    # Databricks 側から AWS を操作する事を許可
    # オプション2：デフォルトの制限ポリシーを使用した顧客管理VPC
    Type: AWS::IAM::Role
    Properties:
      RoleName: dbx-iamrole-base-cmvpc
      AssumeRolePolicyDocument: 
        # 当ロールを Databricks 社が持つ Control Plane が使用する事を許可する
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { AWS: arn:aws:iam::414351767826:root }
            Action: sts:AssumeRole
            Condition:
                StringEquals: { sts:ExternalId: !Ref DatabricksAccountId }
      Policies:
        # 当 AWS アカウントへ Databricks の Control Plane が行える操作を定義
        - PolicyName: dbx-iampolicy-base-cmvpc
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - ec2:AssociateIamInstanceProfile
                  - ec2:AttachVolume
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:CancelSpotInstanceRequests
                  - ec2:CreateTags
                  - ec2:CreateVolume
                  - ec2:DeleteTags
                  - ec2:DeleteVolume
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeIamInstanceProfileAssociations
                  - ec2:DescribeInstanceStatus
                  - ec2:DescribeInstances
                  - ec2:DescribeInternetGateways
                  - ec2:DescribeNatGateways
                  - ec2:DescribeNetworkAcls
                  - ec2:DescribePrefixLists
                  - ec2:DescribeReservedInstancesOfferings
                  - ec2:DescribeRouteTables
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSpotInstanceRequests
                  - ec2:DescribeSpotPriceHistory
                  - ec2:DescribeSubnets
                  - ec2:DescribeVolumes
                  - ec2:DescribeVpcAttribute
                  - ec2:DescribeVpcs
                  - ec2:DetachVolume
                  - ec2:DisassociateIamInstanceProfile
                  - ec2:ReplaceIamInstanceProfileAssociation
                  - ec2:RequestSpotInstances
                  - ec2:RevokeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RunInstances
                  - ec2:TerminateInstances
                  - ec2:DescribeFleetHistory
                  - ec2:ModifyFleet
                  - ec2:DeleteFleets
                  - ec2:DescribeFleetInstances
                  - ec2:DescribeFleets
                  - ec2:CreateFleet
                  - ec2:DeleteLaunchTemplate
                  - ec2:GetLaunchTemplateData
                  - ec2:CreateLaunchTemplate
                  - ec2:DescribeLaunchTemplates
                  - ec2:DescribeLaunchTemplateVersions
                  - ec2:ModifyLaunchTemplate
                  - ec2:DeleteLaunchTemplateVersions
                  - ec2:CreateLaunchTemplateVersion
                  - ec2:AssignPrivateIpAddresses
                  - ec2:GetSpotPlacementScores
              - Effect: Allow
                Resource: arn:aws:iam::*:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot
                Action:
                  - iam:CreateServiceLinkedRole
                  - iam:PutRolePolicy
                Condition:
                  StringLike:
                    iam:AWSServiceName: spot.amazonaws.com

Outputs:
  IAMRoleForCredentialBasic:
    Value: !GetAtt IamRoleDatabricksToAwsBasic.Arn
    Description: IAM Role ARN for Credential Information entry on Databricks Account Console.

  IAMRoleForCredentialCmvpc:
    Value: !GetAtt IamRoleDatabricksToAwsCmvpc.Arn
    Description: IAM Role ARN for Credential Information entry on Databricks Account Console.